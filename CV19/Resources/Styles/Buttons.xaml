<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:fa="http://schemas.fontawesome.com/icons/"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="BtnBase" TargetType="ButtonBase">
        <Setter Property="Background" Value="{StaticResource WhiteBrush}" />
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource BtnBase}" />
    <Style TargetType="ToggleButton" BasedOn="{StaticResource BtnBase}" />

    <Style x:Key="PrimaryBtn" TargetType="Button"  BasedOn="{StaticResource BtnBase}">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style x:Key="DangerBtn" TargetType="Button" BasedOn="{StaticResource BtnBase}">
        <Setter Property="Background" Value="{StaticResource RedBrush}" />
        <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
    </Style>

    <Style x:Key="FocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="2"
                               SnapsToDevicePixels="true"
                               Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                               StrokeThickness="1"
                               StrokeDashArray="1 2" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD" />
    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1" />
    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6" />
    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B" />
    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4" />
    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5" />
    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383" />

    <DropShadowEffect x:Key="DropShadowEffect" ShadowDepth="1" />

    <ControlTemplate x:Key="CheckButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" CornerRadius="6"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="true">
            <DockPanel Margin="{TemplateBinding Padding}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <fa:ImageAwesome Height="12" Icon="Solid_CheckCircle"
                                 Effect="{StaticResource DropShadowEffect}"
                                 Foreground="LightGreen" Margin="0, 0, 3,0" />
                <ContentPresenter x:Name="contentPresenter"
                                  Focusable="False"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <!--<Setter Property="Background" TargetName="border" Value="Blue" />-->
                <Setter Property="Foreground"  Value="White" />
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WhiteBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="DarkBlue" />
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}" />-->
                <Setter Property="BorderBrush" TargetName="border" Value="Black" />
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="DarkGray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="RemoveButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" CornerRadius="6"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}"
                SnapsToDevicePixels="true">
            <DockPanel Margin="{TemplateBinding Padding}"
                       VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                       HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}">
                <fa:ImageAwesome x:Name="IconRemove"
                                 Height="10"
                                 Icon="Solid_Times"
                                 Effect="{StaticResource DropShadowEffect}"
                                 Foreground="DarkRed" Margin="0, 0, 3,0" />
                <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
            </DockPanel>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsDefaulted" Value="true">
                <Setter Property="BorderBrush"
                        TargetName="border"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                <Setter Property="FontWeight" Value="Bold" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="Blue" />
                <Setter Property="Foreground"  Value="White" />
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource WhiteBrush}" />
                <Setter TargetName="IconRemove" Property="Foreground" Value="{StaticResource RedBrush}" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="DarkBlue" />
                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}" />
                <Setter TargetName="IconRemove" Property="Foreground" Value="OrangeRed" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}" />-->
                <Setter Property="BorderBrush" TargetName="border" Value="Black" />
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="DarkGray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="CustomButtonTemplate" TargetType="{x:Type Button}">
        <Border x:Name="border" CornerRadius="6"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
            <ContentPresenter x:Name="contentPresenter"
                              Focusable="False"
                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              Margin="{TemplateBinding Padding}"
                              RecognizesAccessKey="True"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="Background" TargetName="border" Value="White" />
                <Setter Property="Foreground"  Value="Red" />
                <Setter Property="BorderBrush" TargetName="border" Value="Red" />
            </Trigger>
            <Trigger Property="IsPressed" Value="true">
                <Setter Property="Background" TargetName="border" Value="WhiteSmoke" />
                <Setter Property="BorderBrush" TargetName="border" Value="DarkRed" />
                <Setter Property="Foreground" Value="DarkRed" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <!--<Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}" />-->
                <Setter Property="BorderBrush" TargetName="border" Value="Black" />
                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="DarkGray" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="CustomButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template" Value="{StaticResource CustomButtonTemplate}">
        </Setter>
    </Style>

    <Style x:Key="CheckButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="White" />
        <Setter Property="BorderBrush" Value="Black" />
        <Setter Property="Foreground" Value="Black" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template" Value="{StaticResource CheckButtonTemplate}">
        </Setter>
    </Style>

    <Style x:Key="RemoveButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
        <Setter Property="Background" Value="Red" />
        <Setter Property="BorderBrush" Value="WhiteSmoke" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template" Value="{StaticResource RemoveButtonTemplate}">
        </Setter>
    </Style>
</ResourceDictionary>